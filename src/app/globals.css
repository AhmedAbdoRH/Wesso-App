@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: 'Cairo', sans-serif; /* Explicitly use Cairo */
}

@layer base {
  :root {
    /* Light Theme variables - update as per style guidelines */
    --background-light: 210 40% 98%; /* Light Blue base */
    --foreground-light: 210 40% 10%; /* Darker foreground for light bg */
    --card-light: 0 0% 100%; /* White card */
    --card-foreground-light: 210 40% 10%;
    --popover-light: 0 0% 100%;
    --popover-foreground-light: 210 40% 10%;
    --primary-light: 259 95% 65%; /* Purple */
    --primary-foreground-light: 0 0% 100%; /* White */
    --secondary-light: 210 40% 90%; /* Lighter secondary */
    --secondary-foreground-light: 259 50% 30%;
    --muted-light: 210 40% 90%;
    --muted-foreground-light: 210 30% 50%;
    --accent-light: 16 100% 50%; /* Orange/Red */
    --accent-foreground-light: 0 0% 100%;
    --destructive-light: 0 84.2% 60.2%; /* Light red */
    --destructive-foreground-light: 0 0% 98%;
    --border-light: 210 40% 85%;
    --input-light: 210 40% 85%;
    --ring-light: 259 95% 65%; /* Purple */

    /* Dark theme variables */
    --background: 220 25% 4%; /* Very Dark Blue/Almost Black */
    --foreground: 0 0% 95%;   /* Light text */
    --card: 220 20% 8%;       /* Slightly Lighter Dark Card */
    --card-foreground: 0 0% 95%;
    --popover: 220 25% 4%;
    --popover-foreground: 0 0% 95%;
    --primary: 259 95% 65%; /* Purple */
    --primary-foreground: 0 0% 100%; /* White */
    --secondary: 220 15% 12%; /* Darker secondary */
    --secondary-foreground: 0 0% 95%;
    --muted: 220 15% 12%;
    --muted-foreground: 0 0% 60%;
    --accent: 16 100% 50%; /* Orange/Red */
    --accent-foreground: 0 0% 100%; /* White */
    --destructive: 0 70% 50%; /* Darker red */
    --destructive-foreground: 0 0% 98%;
    --border: 220 15% 20%;    /* Slightly lighter border for contrast */
    --input: 220 15% 15%;     /* Slightly lighter input bg */
    --ring: 259 95% 65%; /* Purple for focus rings */
    
    --radius: 0.75rem; /* Rounded corners */

    /* Chart colors (can be adjusted) */
    --chart-1: 220 70% 50%;
    --chart-2: 160 60% 45%;
    --chart-3: 30 80% 55%;
    --chart-4: 280 65% 60%;
    --chart-5: 340 75% 55%;

    /* Sidebar specific (if needed, otherwise they inherit) */
    --sidebar-background: hsl(var(--background));
    --sidebar-foreground: hsl(var(--foreground));
    --sidebar-primary: hsl(var(--primary));
    --sidebar-primary-foreground: hsl(var(--primary-foreground));
    --sidebar-accent: hsl(var(--secondary)); /* Or a specific sidebar accent */
    --sidebar-accent-foreground: hsl(var(--secondary-foreground));
    --sidebar-border: hsl(var(--border));
    --sidebar-ring: hsl(var(--ring));
  }

  .dark {
     /* Variables are already set above for the dark theme */
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    /* Dark gradient using primary dark theme colors */
    @apply bg-gradient-to-br from-[hsl(var(--background))] via-[hsl(var(--background))] to-[hsl(220,30%,2%)] text-foreground;
    font-family: 'Cairo', sans-serif; /* Ensure Cairo font is applied */
  }

  html.dark body {
    /* Ensure this matches the default body for dark theme */
    @apply bg-gradient-to-br from-[hsl(var(--background))] via-[hsl(var(--background))] to-[hsl(220,30%,2%)] text-foreground;
  }
}

@layer components {
  /* Glassmorphism card style */
  .glass-card {
    @apply bg-card/60 dark:bg-card/60 backdrop-blur-xl border border-border/30 rounded-2xl shadow-2xl p-4 sm:p-6 transition-all duration-300 hover:shadow-primary/30;
    /* Increased rounding, adjusted backdrop blur and alpha for card */
  }

  /* Glassmorphism button style */
  .glass-button {
    @apply bg-white/10 dark:bg-white/5 backdrop-blur-md border border-white/20 dark:border-border/20 rounded-xl shadow-lg text-white py-2.5 px-5 transition-all duration-300 hover:bg-white/20 dark:hover:bg-white/10 hover:shadow-primary/50 active:scale-95 disabled:opacity-60 disabled:cursor-not-allowed;
    /* Adjusted alpha for buttons, ensured text-white default */
  }
  .glass-button.bg-primary, .glass-button.bg-primary\/80 {
    @apply text-primary-foreground; /* This should be white if primary-foreground is white */
  }
  .glass-button.bg-accent, .glass-button.bg-accent\/80 {
    @apply text-accent-foreground; /* This should be white if accent-foreground is white */
  }
   /* Ensure all buttons, including default, have white text if no specific foreground is set by variant */
  .glass-button:not([class*="text-primary-foreground"]):not([class*="text-accent-foreground"]) {
    @apply text-white;
  }


   /* Glassmorphism input style */
  .glass-input {
    @apply bg-input/50 dark:bg-input/50 backdrop-blur-sm border border-border/30 rounded-xl shadow-inner text-foreground placeholder-muted-foreground focus:ring-primary focus:border-primary focus:bg-input/70 dark:focus:bg-input/70;
    /* Adjusted alpha for inputs */
   }

  /* Glassmorphism radio button style (visual only, actual radio is hidden) */
  .glass-radio-card {
      @apply glass-card p-3 sm:p-4 cursor-pointer; /* Re-use glass-card for radio-like cards */
  }
   .glass-radio-label {
      @apply ml-2 text-xs sm:text-sm font-medium text-foreground select-none cursor-pointer;
   }

  /* Admin specific styles if needed */
  .admin-section {
    @apply glass-card mb-8;
  }
  .admin-section-title {
    @apply text-2xl font-semibold text-foreground mb-6;
  }
  .admin-form label {
    @apply block text-sm font-medium text-foreground mb-1;
  }
  .admin-form input[type="text"],
  .admin-form input[type="url"],
  .admin-form input[type="number"],
  .admin-form select,
  .admin-form textarea {
    @apply glass-input w-full p-2.5 mb-3 text-base; /* Ensure inputs also get glass style and rounding */
  }
  .admin-form textarea {
    @apply min-h-[100px];
  }
  .admin-form button[type="submit"] {
    @apply glass-button bg-primary/80 hover:bg-primary text-primary-foreground;
  }
  .admin-item-list {
    @apply space-y-3;
  }
  .admin-item {
    @apply glass-card p-4 flex justify-between items-center bg-card/70; /* Subtle item background */
  }
  .admin-item-actions button {
    @apply glass-button text-xs px-3 py-1.5 ml-2; /* Smaller buttons for actions */
  }
  .admin-item-actions button.text-destructive {
    @apply border-destructive/50 hover:bg-destructive/20 text-destructive-foreground; 
  }
   .admin-item-actions button.text-destructive:hover {
    @apply text-destructive-foreground;
  }
  .admin-subtle-button {
    @apply fixed bottom-4 right-4 p-3 bg-primary/70 text-primary-foreground rounded-full shadow-lg hover:bg-primary/90 transition-opacity duration-300 z-50 opacity-30 hover:opacity-100;
  }

  /* Corrected rules for reported CSS syntax error */
  /* These selectors target an element with class "hover:text-destructive" when it is hovered. */
  /* This is unusual if standard Tailwind hover variants are used on the element itself, */
  /* but this directly addresses the selectors from the error message. */
  .admin-item-actions .hover\:text-destructive:hover {
    border-color: hsl(var(--destructive) / 0.5);
    color: hsl(var(--destructive-foreground)); /* This color was part of the original problematic rule */
  }
  /*
    The selector .admin-item-actions .hover\:text-destructive:hoverbutton:hover (which is invalid)
    would simplify to .admin-item-actions .hover\:text-destructive:hover if `:hoverbutton` was meant to be `:hover`.
    Its original content was: color: hsl(var(--destructive-foreground));
    This is now covered by the rule above, so no separate rule is needed for this specific permutation.
  */
}

/* Override ShadCN default input background for our glass style */
.dark .input, .input {
  background-color: transparent !important; /* Important to override ShadCN if it sets explicit bg */
}